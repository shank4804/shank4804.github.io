<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Shashank&#39;s Website</title>
    <link>https://shank4804.github.io/</link>
    <description>Recent content on Shashank&#39;s Website</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 08 Apr 2019 06:59:15 +0000</lastBuildDate>
    
	<atom:link href="https://shank4804.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Overview of Learning How to Learn Coursera course</title>
      <link>https://shank4804.github.io/posts/overview-learning-how-to-learn-coursera/</link>
      <pubDate>Mon, 08 Apr 2019 06:59:15 +0000</pubDate>
      
      <guid>https://shank4804.github.io/posts/overview-learning-how-to-learn-coursera/</guid>
      <description>This is my notes on the overview of all the contents of course Learning How to Learn from Coursera Quick look at concepts consolidated from the course  Focused mode vs diffused mode 25 minute Pomodoro method Long term vs Short term memory Spaced repeated practice to move from Short to Long Sleep well Chunking Releated practice Mini-testing Recall Illusion of Competence Overlearning Deliberate practise Einstellung Interleaving Procrastination Procrastination as a Habit Habit made of cue, routine, reward, belief Initial start is hard Process vs Product Use auto-drive zombie mode (blindy do) Activity tracking before sleep for next day Pomodoro early in the morning Conjure visual images to remember General Problem solving:  Apply known technique Modify known technique Focused brute force thinking Diffused related thinking Repeat until solution  Exercise best method for brain enhancement Visual metaphor (Mud + JSON Marshall) More Genius less creative Imposter Syndrome perseverance = the virtue of the less brilliant Teamwork for fresh brain perspective Minitest benefit &amp;gt;&amp;gt;&amp;gt; Learning benefit Left brain vs right brain (focused vs diffused) Checklist to measure test / interview preparation quality Start hard, jump to easy (Focused vs diffused) Anxiety = Excited for test, not afraid Breath slowly  Week 1: What is Learning?</description>
    </item>
    
    <item>
      <title>SWE big N tips</title>
      <link>https://shank4804.github.io/posts/swe-interview-and-learning-tips/</link>
      <pubDate>Mon, 01 Apr 2019 07:25:15 +0000</pubDate>
      
      <guid>https://shank4804.github.io/posts/swe-interview-and-learning-tips/</guid>
      <description>I was watching through Joma&amp;rsquo;s video on his YouTube channel about a guy named Cyrus Xi receiving amazing offers and I think his tips on preparing / learning in general are worth documenting. So, here it is.
Video link:   His reddit posts:  Pre-FB: https://www.reddit.com/r/cscareerquestions/comments/b3w1gg/2_year_update_my_journey_tips_29_gpa_at_a_small/ Currently after getting Uber, Snap etc.: https://www.reddit.com/r/cscareerquestions/comments/9i0pow/graduated_with_a_24_gpa_1_year_ago_after_studying/  His study guide: https://workflowy.com/s/study-guide/RD5kZ682pWX5oxiE
Along the read, I found this amazing article on Career Planning.</description>
    </item>
    
    <item>
      <title>Review of UC Berkeley Software Product Management course (COMPSCI X418.1)</title>
      <link>https://shank4804.github.io/posts/software-product-management-uc-berkeley-ext/</link>
      <pubDate>Wed, 27 Mar 2019 06:07:19 +0000</pubDate>
      
      <guid>https://shank4804.github.io/posts/software-product-management-uc-berkeley-ext/</guid>
      <description>I took this course as a part of Spring 2019 semester coursework at UC Berkeley extension.
I see soo many engineers jumping on the Product bandwagon. I signed up for this to get a sense of what the fuss is all about.
UC Berkeley extension is a program from UC Berkeley where individual courses from various departments can be taken as evening sessions in SF or Berkeley campus. Seems like it is targeted for folks looking to learn a new skill or for a career switch.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://shank4804.github.io/resume/</link>
      <pubDate>Sun, 17 Feb 2019 07:58:41 +0000</pubDate>
      
      <guid>https://shank4804.github.io/resume/</guid>
      <description>Resume</description>
    </item>
    
    <item>
      <title></title>
      <link>https://shank4804.github.io/contact/</link>
      <pubDate>Sat, 16 Feb 2019 08:24:42 +0000</pubDate>
      
      <guid>https://shank4804.github.io/contact/</guid>
      <description>Contact Email: shank4804@gmail.com LinkedIn: linkedin.com/in/shank7485 GitHub: github.com/shank7485 Twitter: twitter.com/sshank_ IRC: sshank</description>
    </item>
    
    <item>
      <title>Writing Unit tests and Mocks in Golang</title>
      <link>https://shank4804.github.io/posts/unit-testing-in-golang/</link>
      <pubDate>Fri, 16 Feb 2018 08:38:00 +0000</pubDate>
      
      <guid>https://shank4804.github.io/posts/unit-testing-in-golang/</guid>
      <description>I recently started writing some code in Go (or Golang?) there are lot of amazing things to explore. Its always exciting to learn a new language.
So far, I absolutely love Golang. If you are like me who likes C, Python and all this systems/low level OS stuff, you&amp;rsquo;ll get a feeling that Golang for systems will be similar to what JS is for the web. (+ve JS things :-) ).</description>
    </item>
    
    <item>
      <title>Applications on Kubernetes</title>
      <link>https://shank4804.github.io/posts/application-on-kubernetes/</link>
      <pubDate>Tue, 12 Dec 2017 07:49:08 +0000</pubDate>
      
      <guid>https://shank4804.github.io/posts/application-on-kubernetes/</guid>
      <description>It&amp;rsquo;s a world of microservices. With soo many companies containerizing their apps and scaling them using Kubernetes, it&amp;rsquo;s hard not to ignore.
To an idea of Kubernetes and to play around with it, I created this tutorial to install and deploy dockerized apps on a kubernetes cluster.
This tutorial has 3 parts:
 Dockerizing an API
 Deploying a Kubernetes cluster
 Deploying the Dockerized API on the cluster and exposing it.</description>
    </item>
    
    <item>
      <title>Vim Auto Complete</title>
      <link>https://shank4804.github.io/posts/vim-auto-complete/</link>
      <pubDate>Wed, 10 Feb 2016 07:48:15 +0000</pubDate>
      
      <guid>https://shank4804.github.io/posts/vim-auto-complete/</guid>
      <description>Get code completion for Python like an IDE in the terminal using Vim editor with YouCompleteMe and Vungle plugin. Similar to
 This is for Ubuntu Linux (Debian) based OSes. Steps to be followed:  Update to latest Vim. This is done as Vim version greater than 7.41 isn&amp;rsquo;t available in Apt-get of Ubuntu Linux.
sudo add-apt-repository ppa:pkg-vim/vim-daily
sudo apt-get update
sudo apt-get install vim
dpkg -s vim | grep &#39;Version&#39; #should be greater than 7.</description>
    </item>
    
    <item>
      <title>Internet Relay Chat</title>
      <link>https://shank4804.github.io/posts/irc/</link>
      <pubDate>Fri, 08 Jan 2016 07:46:15 +0000</pubDate>
      
      <guid>https://shank4804.github.io/posts/irc/</guid>
      <description>Ever since I wanted to contribute to an open-source project, I was told on online forums to contact the specific IRC channels to ask questions and start contributing. That&amp;rsquo;s fine. I&amp;rsquo;ll do that. But I never understood what was IRC.
So what&amp;rsquo;s IRC? Wikipedia quotes &amp;lsquo;Internet Relay Chat Protocol (IRCP) is an application layer protocol that facilitates communication in the form of text. The chat process works on a client/server networking model.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://shank4804.github.io/homepage/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shank4804.github.io/homepage/</guid>
      <description>About  I am a Software Engineer and I love to work as a developer in areas mostly related to distributed systems, scalable web services, cloud infrastructure and anything Open Source.  I am currectly working at Workday Inc. in the San Francisco Bay Area building a scalable platform using all things cloud native (Golang, Kubernetes, Service Mesh) on AWS.  Previously, I used to work at Intel Corporation in the Open Source Technology Group contributing to open source cloud projects.</description>
    </item>
    
  </channel>
</rss>